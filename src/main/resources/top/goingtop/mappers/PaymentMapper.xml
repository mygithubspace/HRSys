<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.goingtop.dao.PaymentDao">
	<resultMap type="Payment" id="PaymentResult">
		<result property="id" column="id"/>
		<result property="employerId" column="employerId"/>
		<result property="baseSalary" column="baseSalary"/>
		<result property="performanceSalary" column="performanceSalary"/>
		<result property="bonus" column="bonus"/>
		<result property="fine" column="fine"/>
		<result property="paymentNum" column="paymentNum"/>
		<result property="paymentTime" column="paymentTime"/>
	</resultMap>
	<select id="findById" parameterType="Integer" resultMap="PaymentResult">
		select * from `payment` where id=#{id}
	</select>
	<select id="find" parameterType="Map" resultMap="PaymentResult">
		select * from `payment`
			<where>
			<if test="employerId!=null and employerId!='' ">
				 and employerId like #{employerId}
			</if>
		</where>
		ORDER BY paymentTime DESC
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from `payment`
		<where>
			<if test="id!=null and id!='' ">
				 and id like #{id}
			</if>
		</where>
	</select>
	<insert id="add" parameterType="Payment">
		insert into `payment` values(null,#{employerId},#{baseSalary},#{performanceSalary},#{bonus},#{fine},#{paymentNum},#{paymentTime})
	</insert>
	<update id="update" parameterType="Payment">
		update `payment`
		<set>
			<if test="employerId!=null and employerId!=''">
				employerId=#{employerId},
			</if>
			<if test="baseSalary!=null and baseSalary!=''">
				baseSalary=#{baseSalary},
			</if>
			<if test="performanceSalary!=null and performanceSalary!=''">
				performanceSalary=#{performanceSalary},
			</if>
			<if test="bonus!=null and bonus!=''">
				bonus=#{bonus},
			</if>
			<if test="fine!=null and fine!=''">
				fine=#{fine},
			</if>
			<if test="paymentNum!=null and paymentNum!=''">
				paymentNum=#{paymentNum},
			</if>
			<if test="paymentTime!=null and paymentTime!=''">
				paymentTime=#{paymentTime},
			</if>
		</set>
		where id=#{id}
	</update>
	<delete id="delete" parameterType="Integer">
		delete from `payment` where id=#{id}
	</delete>
</mapper> 